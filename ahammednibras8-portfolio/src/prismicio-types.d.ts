// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client';

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for Blog documents
 */
interface BlogDocumentData {
	/**
	 * Title field in *Blog*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: Title
	 * - **API ID Path**: blog.title
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#key-text
	 */
	title: prismic.KeyTextField;

	/**
	 * Content field in *Blog*
	 *
	 * - **Field Type**: Rich Text
	 * - **Placeholder**: Content
	 * - **API ID Path**: blog.content
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#rich-text-title
	 */
	content: prismic.RichTextField;

	/**
	 * Date field in *Blog*
	 *
	 * - **Field Type**: Date
	 * - **Placeholder**: Date
	 * - **API ID Path**: blog.date
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/field#date
	 */
	date: prismic.DateField;
}

/**
 * Blog document from Prismic
 *
 * - **API ID**: `blog`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
	Simplify<BlogDocumentData>,
	'blog',
	Lang
>;

export type AllDocumentTypes = BlogDocument;

declare module '@prismicio/client' {
	interface CreateClient {
		(
			repositoryNameOrEndpoint: string,
			options?: prismic.ClientConfig
		): prismic.Client<AllDocumentTypes>;
	}

	interface CreateWriteClient {
		(
			repositoryNameOrEndpoint: string,
			options: prismic.WriteClientConfig
		): prismic.WriteClient<AllDocumentTypes>;
	}

	interface CreateMigration {
		(): prismic.Migration<AllDocumentTypes>;
	}

	namespace Content {
		export type { BlogDocument, BlogDocumentData, AllDocumentTypes };
	}
}
